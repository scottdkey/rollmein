version: '3.9'
services:
  database:
    image: postgres
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DATABASE}
    ports:
      - "5432:5432"
    expose:
      - 5432
    volumes:
      - postgres_db:/var/lib/postgresql/data
      - ./api/sql:/docker-entrypoint-initdb.d
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    expose:
      - 6379
    volumes:
      - redis_data:/data
volumes:
  postgres_db:
  redis_data:
  # api:
  #   image: scottdkey/rollmein_api
  #   build:
  #     context: ./api
  #     dockerfile: Dockerfile.dev
  #   volumes:
  #     - ./api/src:/usr/api/src
  #   command: bash -c 'while !/dev/tcp/database/5432; do sleep 1; done; yarn dev'
  #   env_file:
  #     - .env
  #   environment:
  #     - NODE_ENV=${NODE_ENV}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  #     - POSTGRES_USER=${POSTGRES_USER}
  #     - POSTGRES_PORT=${POSTGRES_PORT}
  #     - PORT=${API_SERVER_PORT}
  #     - POSTGRES_DATABASE=${POSTGRES_DATABASE}
  #     - REDIS_HOST=redis
  #     - POSTGRES_HOST=database
  #   ports:
  #     - 8000:8000
  #   expose:
  #     - 8000
  #   depends_on:
  #     - database
  #     - redis
  # frontend:
  #   image: scottdkey/rollmein_frontend
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile.dev
  #   volumes:
  #     - ./frontend/src:/usr/app/src
  #   env_file:
  #     - .env
  #   environment:
  #     - REACT_APP_API_HOST=${API_BASE_URL}
  #   ports:
  #     - 3000:3000
  #   expose:
  #     - 3000
  #   depends_on:
  #     - api
