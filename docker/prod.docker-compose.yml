version: "3.9"
services:
  database:
    image: postgres
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DATABASE}
    volumes:
      - postgres_db:/var/lib/postgresql/data
    expose:
      - 5432
    ports:
      - 5432:5432
    networks:
      - traefik-public
  redis:
    image: redis:alpine
    volumes:
      - redis_data:/data
    expose:
      - 6379
    networks:
      - traefik-public
  api:
    hostname: rollmein-api
    container_name: rollmein-api
    # image: ghcr.io/scottdkey/rollmein:main
    image: scottdkey/rollmein_api:1.0.0
    pull_policy: always
    restart: on-failure
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=database
      - REDIS_HOST=redis
    volumes:
      - ./api/log:/usr/api/log
    ports:
      - $PORT:$PORT
    depends_on:
      database:
        condition: service_started
      redis:
        condition: service_started
    labels:
      - traefik.enable=true
      - traefik.http.routers.rollmein-api.rule=Host(`rollmein-api.scottkey.dev`)

      - traefik.http.routers.rollmein-api.tls=true
      - traefik.http.routers.rollmein-api.entrypoints=websecure

      - traefik.http.routers.rollmein-api.entrypoints=ws
      - traefik.http.routers.rollmein-api.entrypoints=wss
      - traefik.http.routers.rollmein-api.middlewares=ws-headers@docker
      - traefik.http.routers.rollmein-api.tls.certresolver=traefikResolver
    networks:
      - traefik-public
networks:
  # part of public and private networks. Each service can choose which network to join
  traefik-public:
    external: true
  # traefik-private:
  #   external: false
volumes:
  postgres_db:
  redis_data:
