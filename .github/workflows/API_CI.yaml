# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: API_CI

on:
  workflow_run:
    workflows: ["API_Test"]
    types: [completed]

jobs:
  on-success:
    name: Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./api
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      # So now you can use Actions' own caching!
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - uses: benjlevesque/short-sha@v1.2
        id: short-sha
        with:
          length: 6

      - name: Log into Docker Hub
        uses: docker/login-action@v1.9.0

        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_PASSWORD}}

      - name: Build and Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: ./api
          push: true
          tags: scottdkey/rollmein_api:latest, scottdkey/rollmein_api:${{ steps.short-sha.outputs.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  on-failure:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    steps:
      - run: echo "Test suite was failed"
