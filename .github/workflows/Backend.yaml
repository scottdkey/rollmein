name: Backend

on:
  push:
    branches: [main, staging]
    paths:
      - "api/**"
  pull_request:
    branches: [main, staging]
    paths:
      - "api/**"
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./api

    strategy:
      matrix:
        node: [16.x, 18.x]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Cache yarn dependencies
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        run: yarn --prefer-offline

      - name: Test Suite
        run: yarn test
  build:
    needs: [test]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    defaults:
      run:
        working-directory: ./api
    steps:
      - uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: benjlevesque/short-sha@v1.2
        id: short-sha
        with:
          length: 6

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: ./api
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Create File
        run: touch .ssh/id_rsa.pub

      - name: Write SSH Key
        run: echo ${{secrets.SSH_PRIVATE_KEY}} > .ssh/id_rsa.pub

      - name: Connect to remote host
        run: ssh ${{secrets.SSH_HOST_USER}}@${{secrets.SSH_HOST}}

      - name: Change to correct directory
        run: cd ~/rollmein

      - name: Write .env
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_NODE_ENV: ${{secrets.NODE_ENV}}
          envkey_PORT: ${{secrets.PORT}}
          envkey_CORS_URL: ${{secrets.CORS_URL}}
          envkey_SECRETKEY: ${{secrets.SECRETKEY}}
          envkey_SUPABASE_URL: ${{secrets.SUPABASE_URL}}
          envkey_SUPABASE_ANON_KEY: ${{secrets.SUPABASE_ANON_KEY}}
          envkey_SUPABASE_JWT: ${{secrets.SUPABASE_JWT}}
          envkey_POSTGRES_DATABASE: ${{secrets.POSTGRES_DATABASE}}
          envkey_POSTGRES_PORT: ${{secrets.POSTGRES_PORT}}
          envkey_POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
          envkey_POSTGRES_USER: ${{secrets.POSTGRES_USER}}
          directory: ~/rollmein
          file_name: .env
          fail_on_empty: true

      - name: Validate Env(test remove )
        run: cat .env

      - name: Deploy latest
        run: git pull && yarn prod

      
