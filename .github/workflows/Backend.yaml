name: Backend

on:
  push:
    branches: [main]
    paths:
      - "api/**"
  pull_request:
    branches: [main]
    paths:
      - "api/**"
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./api

    strategy:
      matrix:
        node: [16.x, 18.x]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Cache yarn dependencies
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        run: yarn --prefer-offline

      - name: Test Suite
        run: yarn test
  build:
    needs: [test]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    defaults:
      run:
        working-directory: ./api
    steps:
      - uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - uses: benjlevesque/short-sha@v1.2
        id: short-sha
        with:
          length: 6

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.short-sha.outputs.sha }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: ./api
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
  # deploy:
   # needs: [build]
   # runs-on: ubuntu-latest
   # steps:
    #  - uses: actions/checkout@v2

     # - uses: dorny/paths-filter@v2
      #  id: changes
       # with:
        #  filters: |
         #   backend:
          #  - 'api/**'

     # - uses: benjlevesque/short-sha@v1.2
      #  id: short-sha
       # with:
        #  length: 6

     # - name: Update Image
      #  uses: actions-hub/kubectl@master
       # env:
        #  KUBE_CONFIG: ${{ secrets.KUBECONFIG }}
       # with:
        #  args: set image deployment/rollmein rollmein=scottdkey/rollmein_api:${{ steps.short-sha.outputs.sha }}

      #x- name: Verify Deployment
        #uses: actions-hub/kubectl@master
        #env:
         # KUBE_CONFIG: ${{ secrets.KUBECONFIG }}
       # with:
        #  args: rollout status deployment/rollmein
