# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Backend

on:
  push:
    branches: [main]
    paths:
      - "api/**"
  pull_request:
    branches: [main]
    paths:
      - "api/**"

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./api

    strategy:
      matrix:
        node: [12.x, 14.x, 16.x]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Cache npm dependencies
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        run: yarn --prefer-offline

      - name: Test Suite
        run: yarn test
  build:
    needs: [test]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./api
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - uses: benjlevesque/short-sha@v1.2
        id: short-sha
        with:
          length: 6

      - name: Log into Docker Hub
        uses: docker/login-action@v1.9.0
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_PASSWORD}}

      - name: Build and Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: ./api
          push: true
          tags: scottdkey/rollmein_api:latest, scottdkey/rollmein_api:${{ steps.short-sha.outputs.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            backend:
            - 'api/**'

      - uses: benjlevesque/short-sha@v1.2
        id: short-sha
        with:
          length: 6

      - name: Update Image
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBECONFIG }}
        with:
          args: set image deployment/rollmein rollmein=scottdkey/rollmein_api:${{ steps.short-sha.outputs.sha }}

      - name: Verify Deployment
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBECONFIG }}
        with:
          args: rollout status deployment/rollmein
